% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/greedy_knapsack.R
\name{greedy_knapsack}
\alias{greedy_knapsack}
\title{Implementation of Brute-force method to solve knapsack problem}
\usage{
greedy_knapsack(x, W)
}
\arguments{
\item{x}{: Input Data.Frame having Columns v (values) and their w (weights)}

\item{W}{: Input Numeric - maximum capacity of the knapsack}
}
\value{
The function returns a list having a> maximum values b> elements that can be filled into the knapsack
}
\description{
Implementation of Brute-force method to solve knapsack problem
}
\details{
This algorithm can be used to solve the knapsack problem - Given a set of items,
         each with a weight and a value, determine the number of each item to include in a collection so that
         total weight is less than or equal to a given limit and the total value is as large as possible. The Greedy
         algorithm sorts the items in decreasing order of value per unit of weight and then proceeds to insert them into the sack.
         This algorithm will not give an exact result (but it can be shown that it will return at least 50% of the true maximum value),
         but it will reduce the computational complexity considerably. For more details refer
\url{https://en.wikipedia.org/wiki/Knapsack_problem#Greedy_approximation_algorithm}
}
\examples{

\dontrun{
 brute_force_knapsack(x = knapsack_objects[1:16,], W = 3500)
 $value
 [1] 24644
$element
 [1]  4  7  9 13 15
}
}
