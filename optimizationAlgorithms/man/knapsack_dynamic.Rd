% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knapsack_dynamic.R
\name{knapsack_dynamic}
\alias{knapsack_dynamic}
\title{Implementation of Dynamic Method method to solve knapsack problem}
\usage{
knapsack_dynamic(x, W)
}
\arguments{
\item{x}{: Input Data.Frame having Columns v (values) and their w (weights)}

\item{W}{: Input Numeric - maximum capacity of the knapsack}
}
\value{
The function returns a list having a> maximum values b> elements that can be filled into the knapsack
}
\description{
Implementation of Dynamic Method method to solve knapsack problem
}
\details{
This algorithm can be used to solve the knapsack problem - Given a set of items,
         each with a weight and a value, determine the number of each item to include in a collection so that
         total weight is less than or equal to a given limit and the total value is as large as possible.
         The basic idea is to use a matrix to store the values of the elements and then select the max value.
\url{https://en.wikipedia.org/wiki/Knapsack_problem#Dynamic_programming_in-advance_algorithm}
}
\examples{

\dontrun{
 brute_force_knapsack(x = knapsack_objects[1:16,], W = 3500)
 $value
 [1] 24644
$element
 [1]  4  7  9 13 15
}
}
